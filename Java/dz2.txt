import java.io.File;
import java.io.FileWriter;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.util.Arrays;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.text.DateFormat;
import java.util.logging.Logger;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.SimpleFormatter;

class BubbleSort {
    private static File log;
    private static FileWriter fileWriter;
    static Logger logger = Logger.getLogger(Printer.class.getName());
    public static void getLog(){
        try {
            FileHandler fileHandler = new FileHandler("log.txt");
            logger.addHandler(fileHandler);
            SimpleFormatter formatter = new SimpleFormatter();
            fileHandler.setFormatter(formatter);
        }
        catch(Exception e){
            
        }
    }
  
    public static void sort(int[] mas) {
      
//        for (int i = 0; i < mas.length; i++) {
//          Boolean flag = true;
//          StringBuilder sb = new StringBuilder();
//          for (int j = 0; j < mas.length - (i + 1); j++) { 
//            if (mas[j] > mas[j + 1]) {
//              flag = false;
//              //swap (mas[j], mas[j + 1]);
//              int tmp=mas[j];
//              mas[j]=mas[j+1];
//              mas[j+1]=tmp;
//            }
//          }
//          if (flag) {
//            break;
//          }
      DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm");
      Date date = new Date();
      StringBuilder sb = new StringBuilder();
      int count = 0;
      int count_flag = 10;
      if (mas[1] == 9) count_flag = 10;
      if (mas[1] == 3) count_flag = 8;
      for (int i = 0; i < mas.length - 1; i++){
        sb.setLength(0);
        for (int j = 0; j < mas.length - i - 1; j++){ 
          if (mas[j] > mas[j + 1]){
            int tmp=mas[j];
            mas[j]=mas[j+1];
            mas[j+1]=tmp;
          }
        }
        
        sb.append(dateFormat.format(date)).append(" ").append(Arrays.toString(mas)).append("\n");
        if (count < count_flag){
          try(FileWriter fout = new FileWriter("log.txt", true)){
            fout.write(sb.toString());
          }
          catch(Exception e){
            e.printStackTrace();
          }
        }
        count++;
      }
      sb.setLength(0);
      if (count < count_flag){
        sb.append(dateFormat.format(date)).append(" ").append(Arrays.toString(mas));
        try(FileWriter fout = new FileWriter("log.txt", true)){
          fout.write(sb.toString());
        }
        catch(Exception e){
          e.printStackTrace();
        }
      }
    }
}


// Не удаляйте этот класс - он нужен для вывода результатов на экран и проверки
public class Printer{ 
    
    public static void main(String[] args) { 
      
      int[] arr = {};
      
      if (args.length == 0) {
        // При отправке кода на Выполнение, вы можете варьировать эти параметры
        arr = new int[]{9, 4, 8, 3, 1};
        arr = new int[]{10, 9, 8, 7, 6, 5, 4, 3, 2, 1};
        arr = new int[]{9, 3, 4, 8, 2, 5, 7, 1, 6, 10};
      }
      else{
        arr = Arrays.stream(args[0].split(", ")).mapToInt(Integer::parseInt).toArray();
      }     

      try(FileWriter fout = new FileWriter("log.txt", false)){
        //fout.write(sb.toString());
      }
      catch(Exception e){
        e.printStackTrace();
      }
      
      BubbleSort ans = new BubbleSort();      
      ans.sort(arr);

      try (BufferedReader br = new BufferedReader(new FileReader("log.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                System.out.println(line);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}